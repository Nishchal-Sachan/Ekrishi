generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  email      String      @unique
  username   String      @unique
  password   String
  avatar     String?
  createdAt  DateTime    @default(now())
  chats      Chat[]      @relation(fields: [chatIDs], references: [id])
  chatIDs    String[]    @db.ObjectId
  Post       Post[]
  savedPosts SavedPost[]
}

model Post {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  price      Int
  images     String[]
  address    String
  region     String
  latitude   String
  longitude  String
  type       Type
  grade      Grade
  createdAt  DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id])
  userId     String      @db.ObjectId
  postDetail postDetail?
  SavedPost  SavedPost[]
}

enum Type {
  natural
  oragnic
}

enum Grade {
  premium
  freshHarvest
  greenHouseGrown
  imported
}

model postDetail {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  desc       String
  water      String?
  irrigation String?
  insurance  String?
  size       Int?
  variety    String?
  center     String?
  office     String?
  market     String?
  post       Post    @relation(fields: [postId], references: [id])
  postId     String  @unique @db.ObjectId
}

model SavedPost {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  userId    String   @unique @db.ObjectId
  postId    String   @unique @db.ObjectId
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model Chat {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  users       User[]    @relation(fields: [userIDs], references: [id])
  userIDs     String[]  @db.ObjectId
  createdAt   DateTime  @default(now())
  seenBy      String[]  @db.ObjectId
  messages    Message[] @relation(fields: [msgIDs], references: [id])
  msgIDs      String[]  @db.ObjectId
  lastMessage String?
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  userId    String
  chat      Chat[]   @relation(fields: [chatID], references: [id])
  chatID    String[] @db.ObjectId
  createdAt DateTime @default(now())
}
